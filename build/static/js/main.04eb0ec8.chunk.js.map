{"version":3,"sources":["assets/acbLogoBlue.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","azureUrl","azureUrlToken","concat","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","dot","alignItems","display","fontSize",":before","backgroundColor","arguments","length","undefined","borderRadius","content","marginRight","height","width","colourStyles","control","styles","Object","objectSpread","option","_ref","data","isDisabled","isFocused","isSelected","color","cursor","input","placeholder","singleValue","_ref2","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSuccess","_ref4","asyncToGenerator","regenerator_default","a","mark","_callee","accessToken","_ref3","response","yammerAcc","id","wrap","_context","prev","next","state","setState","isLoading","user","firebase","database","ref","orderByChild","equalTo","email","once","then","snapshot","exists","key","keys","val","child","hasChild","errorMessage","showError","updateData","full_name","updated_full_name","job_title","department","mugshot_url","replace","phoneNumber","contact","phone_numbers","number","update","userInfo","step","catch","error","setTimeout","stop","_x","_x2","apply","handleChange","name","event","defineProperty","target","value","registry","registrationInfo","willJoin","transportationDeparture","transportationArrive","location","reason","cmnd","roommate","registered","staySchedules","eatSchedules","roommateName","set","getEventDetails","forEach","tempChild","time","startTime","date","title","description","host","allow","push","eventTimelineData","apps","initializeApp","getRegistryData","_this2","transportationTypes","values","transporationTypesData","transType","transTypesArrive","transTypesDeparture","_this3","locationsData","locations","locationData","_this4","users","members","userArr","usersData","i","label","stayings","stayingArr","checked","eatings","eatingArr","eventUsers","getEventUsersAndSchedules","getTransporationTypes","getLocations","_this5","react_default","createElement","dist_default","loading","bgColor","spinnerColor","textColor","text","className","src","logo","alt","react_oauth_flow_m","authorizeUrl","clientId","redirectUri","render","_ref5","url","Button_default","variant","href","disabled","tokenUrl","onAuthSuccess","onAuthError","handleError","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","style","padding","flexDirection","textAlign","marginTop","Avatar_default","fontWeight","FormGroup_default","row","marginBottom","FormControlLabel_default","Switch_default","onChange","TextField_default","marginLeft","fullWidth","margin","FormControl_default","component","FormLabel_default","RadioGroup_default","aria-label","map","type","Radio_default","stay","index","Checkbox_default","eat","react_select_esm","selectedOption","options","isSearchable","multiline","rowsMax","size","onClick","flex","dist_es6","iconStyle","background","Component","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04eb0ec8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/acbLogoBlue.30d96b11.png\";","import React, { Component } from 'react';\nimport logo from './assets/acbLogoBlue.png';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport Select from 'react-select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { OauthSender, OauthReceiver } from 'react-oauth-flow';\nimport firebase from 'firebase';\nimport LoadingScreen from 'react-loading-screen';\n\nimport './App.css';\n\n// const url = 'https://trienkhaikinhdoanh-acb.serveo.net/';\n// const urlToken = `${url}oauth2/token`;\n\nconst azureUrl = 'https://trienkhaikinhdoanh-acb.serveo.net/';\nconst azureUrlToken = `${azureUrl}oauth2/token`;\n\n\nlet config = {\n  apiKey: \"AIzaSyDpn4qBYUHJINdRDnQTH32XWEWRVrD7Htc\",\n  authDomain: \"acbevents-8e7f8.firebaseapp.com\",\n  databaseURL: \"https://acbevents-8e7f8.firebaseio.com\",\n  projectId: \"acbevents-8e7f8\",\n  storageBucket: \"\",\n  messagingSenderId: \"72653524490\"\n};\n\nconst dot = (color = '#ccc') => ({\n  alignItems: 'center',\n  display: 'flex',\n  fontSize: 14,\n\n  ':before': {\n    backgroundColor: color,\n    borderRadius: 10,\n    content: null,\n    display: 'block',\n    marginRight: 8,\n    height: 10,\n    width: 10,\n  },\n});\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white', width: '70%' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: '#ffffff',\n      color: 'black',\n      cursor: 'default',\n      fontSize: 14,\n    };\n  },\n  input: styles => ({ ...styles, ...dot() }),\n  placeholder: styles => ({ ...styles, ...dot() }),\n  singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      step: 0,\n      registrationInfo: {\n        willJoin: true,\n        transportationDeparture: null,\n        transportationArrive: null,\n        location: null,\n      },\n      eventTimelineData: [],\n      reason: \"\",\n      cmnd: \"\",\n    }\n  }\n\n  componentWillMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n    this.getRegistryData();\n  }\n\n  handleSuccess = async (accessToken, { response, state }) => {\n    this.setState({\n      isLoading: true\n    })\n    let yammerAcc = response.user;\n    let id = yammerAcc.id;\n\n    //Check added members. If exist, update user info. If not, notify to user\n    let membersRef = firebase.database().ref('Topics/BusinessDeployment/Events/2019/members');\n    membersRef.orderByChild('email').equalTo(response.user.email).once('value').then(snapshot => {\n      if (snapshot.exists()) {\n        let key = Object.keys(snapshot.val())[0];\n\n        //Registered. Not allow registry again\n        if (snapshot.child(key).hasChild('registered')) {\n          this.setState({\n            ...this.state,\n            isLoading: false,\n            errorMessage: 'Bạn đã đăng ký sự kiện. Xin chân thành cám ơn!',\n            showError: true\n          })\n        } else {\n          let updateData = {};\n          updateData.key = key;\n          updateData.id = id;\n          updateData.full_name = response.user.full_name;\n          updateData.updated_full_name = snapshot.child(key).val().updated_full_name;\n          updateData.job_title = response.user.job_title;\n          updateData.department = response.user.department;\n          updateData.mugshot_url = response.user.mugshot_url.replace(\"48x48\", \"100x100\");\n          updateData.email = response.user.email;\n          updateData.phoneNumber = response.user.contact.phone_numbers[0].number;\n          firebase.database().ref(`Topics/BusinessDeployment/Events/2019/members/${key}`).update(updateData).then((data) => {\n            this.setState({\n              ...this.state,\n              isLoading: false,\n              userInfo: updateData,\n              step: 1\n            })\n          }).catch((error) => {\n          });\n          setTimeout(() => {\n            this.setState({ isLoading: false })\n          }, 1000);\n        }\n      } else {\n        this.setState({\n          ...this.state,\n          isLoading: false,\n          errorMessage: 'Bạn không nằm trong danh sách tham dự sự kiện',\n          showError: true\n        })\n      }\n    })\n  };\n\n  getTransporationTypes() {\n    firebase.database().ref('TransportationTypeArriveTypes').once('value').then(snapshot => {\n      let transportationTypes = Object.values(snapshot.val());\n      let transporationTypesData = [];\n      transportationTypes.forEach((transType) => {\n        transporationTypesData.push(transType.name);\n      });\n      this.setState({\n        transTypesArrive: transporationTypesData\n      })\n    });\n\n    firebase.database().ref('TransportationTypeDepartureTypes').once('value').then(snapshot => {\n      let transportationTypes = Object.values(snapshot.val());\n      let transporationTypesData = [];\n      transportationTypes.forEach((transType) => {\n        transporationTypesData.push(transType.name);\n      });\n      this.setState({\n        transTypesDeparture: transporationTypesData\n      })\n    });\n  }\n\n  getLocations() {\n    firebase.database().ref('Locations').once('value').then(snapshot => {\n      let locationsData = Object.values(snapshot.val());\n      let locations = [];\n      locationsData.forEach((locationData) => {\n        locations.push(locationData.name);\n      });\n      this.setState({\n        locations: locations\n      })\n    });\n  }\n\n  getEventUsersAndSchedules() {\n    firebase.database().ref(`Topics/BusinessDeployment/Events/2019`).once('value').then(snapshot => {\n      let users = snapshot.val().members;\n      let userArr = Object.values(users);\n      let usersData = [];\n      for (let i = 0; i < userArr.length; i++) {\n        usersData.push({\n          value: userArr[i].updated_full_name,\n          label: userArr[i].updated_full_name,\n        });\n      }\n\n      let stayings = snapshot.val().staySchedules;\n      let stayingArr = Object.values(stayings);\n      let staySchedules = [];\n      for (let i = 0; i < stayingArr.length; i++) {\n        staySchedules.push({\n          id: i,\n          name: stayingArr[i].name,\n          checked: false\n        });\n      }\n\n      let eatings = snapshot.val().eatSchedules;\n      let eatingArr = Object.values(eatings);\n      let eatSchedules = [];\n      for (let i = 0; i < eatingArr.length; i++) {\n        eatSchedules.push({\n          id: i,\n          name: eatingArr[i].name,\n          checked: false\n        });\n      }\n\n      this.setState({\n        ...this.state,\n        eventUsers: usersData,\n        eatSchedules: eatSchedules,\n        staySchedules: staySchedules\n      })\n    })\n  }\n\n  getRegistryData() {\n    this.getEventUsersAndSchedules();\n    this.getTransporationTypes();\n    this.getLocations();\n    this.getEventDetails();\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  registry = () => {\n    if (this.state.registrationInfo.willJoin && (this.state.registrationInfo.transportationDeparture == null || this.state.registrationInfo.transportationArrive === null || this.state.registrationInfo.location === null)) {\n      this.setState({\n        ...this.state,\n        errorMessage: 'Xin vui lòng chọn phương tiện di chuyển đi/về và nơi cư trú hiện tại.',\n        showError: true\n      })\n    } else if (!this.state.registrationInfo.willJoin && this.state.reason === \"\") {\n      this.setState({\n        ...this.state,\n        errorMessage: 'Xin vui lòng nhập lý do không tham dự sự kiện.',\n        showError: true\n      })\n    } else if (this.state.registrationInfo.willJoin && this.state.cmnd === \"\") {\n      this.setState({\n        ...this.state,\n        errorMessage: 'Xin vui lòng nhập số CMND / Căn cước.',\n        showError: true\n      })\n    } else if (this.state.registrationInfo.willJoin && this.state.roommate !== undefined && this.state.roommate.value === this.state.userInfo.updated_full_name) {\n      this.setState({\n        ...this.state,\n        errorMessage: 'Vui lòng chọn bạn cùng phòng khác.',\n        showError: true\n      })\n    } else {\n      this.setState({\n        isLoading: true\n      })\n      firebase.database().ref(`Topics/BusinessDeployment/Events/2019/members`).orderByChild('email').equalTo(this.state.userInfo.email).once('value').then(snapshot => {\n        let key = Object.keys(snapshot.val())[0];\n        let updateData = {\n          email: this.state.userInfo.email,\n          full_name: this.state.userInfo.full_name,\n          updated_full_name: this.state.userInfo.updated_full_name,\n          job_title: this.state.userInfo.job_title,\n          department: this.state.userInfo.department,\n          registered: this.state.registrationInfo.willJoin,\n          transportationDeparture: this.state.registrationInfo.transportationDeparture,\n          transportationArrive: this.state.registrationInfo.transportationArrive,\n          location: this.state.registrationInfo.location,\n          staySchedules: this.state.registrationInfo.willJoin ? this.state.staySchedules : null,\n          eatSchedules: this.state.registrationInfo.willJoin ? this.state.eatSchedules : null,\n          roommateName: this.state.registrationInfo.willJoin ? this.state.roommate !== undefined ? this.state.roommate : '' : null,\n          reason: this.state.reason ? this.state.reason : null,\n          cmnd: this.state.cmnd ? this.state.cmnd : null,\n          mugshot_url: this.state.userInfo.mugshot_url\n        }\n        firebase.database().ref(`Topics/BusinessDeployment/Events/2019/members/${key}`).set(updateData).then(snapshot => {\n          this.setState({\n            ...this.state,\n            isLoading: false,\n            step: 0,\n            showError: true,\n            errorMessage: \"Đăng ký thành công\"\n          })\n        })\n      });\n    }\n  }\n\n  getEventDetails = () => {\n    firebase.database().ref(`Topics/BusinessDeployment/Events/2019/programDetails`).once('value').then(snapshot => {\n      let data = [];\n      snapshot.forEach(child => {\n        let tempChild = {\n          time: child.val().startTime,\n          date: child.val().date,\n          title: child.val().title,\n          description: child.val().host !== \"''\" ? child.val().host : null,\n          allow: child.val().allow,\n          key: child.key\n        }\n        data.push(tempChild);\n      });\n\n      this.setState({\n        ...this.state,\n        isLoading: false,\n        eventTimelineData: data\n      })\n    })\n  }\n\n  render() {\n\n    return (\n      this.state.isLoading ? <LoadingScreen\n        loading={this.state.isLoading}\n        bgColor='#f1f1f1'\n        spinnerColor='#9ee5f8'\n        textColor='#676767'\n        text='Xin vui lòng đợi trong giây lát!' /> : this.state.step === 0 ?\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <OauthSender\n                authorizeUrl=\"https://www.yammer.com/oauth2/authorize\"\n                clientId='0JqrtQdnp8sRHVr2pxx0dA'\n                redirectUri={azureUrl}\n                render={({ url }) =>\n                  <Button variant=\"contained\" color=\"primary\" href={url} disabled={this.state.isLoading}>\n                    ĐĂNG NHẬP\n              </Button>}\n              />\n              <OauthReceiver\n                tokenUrl={azureUrlToken}\n                onAuthSuccess={this.handleSuccess}\n                onAuthError={this.handleError}\n              />\n            </header>\n            <Snackbar\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={this.state.showError}\n              autoHideDuration={5000}\n              onClose={() => {\n                this.setState({\n                  showError: false\n                })\n              }}\n              ContentProps={{\n                'aria-describedby': 'message-id',\n              }}\n              message={<span id=\"message-id\">{this.state.errorMessage}</span>}\n            />\n          </div> :\n          <div style={{ padding: 10, display: 'flex', flexDirection: 'row' }}>\n            <div className=\"App-form\">\n              <div style={{ textAlign: 'center', marginTop: 10, height: 120, width: 120, borderRadius: 60, backgroundColor: '#dbdbdb' }}>\n                <Avatar src={this.state.userInfo.mugshot_url} style={{ width: 120, height: 120 }} />\n              </div>\n              <div style={{ marginTop: 10, color: '#1f419b', fontWeight: 'bold', fontSize: '1rem' }}>\n                {this.state.userInfo.updated_full_name}\n              </div>\n              <div style={{ marginTop: 10, color: 'black', fontWeight: 'bold', fontSize: '0.9rem' }}>\n                {this.state.userInfo.job_title}\n              </div>\n              <div style={{ marginTop: 10, color: '#676767', fontSize: '0.9rem' }}>\n                {this.state.userInfo.department}\n              </div>\n              <FormGroup row style={{ marginTop: 10, marginBottom: 10 }}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.registrationInfo.willJoin}\n                      color=\"primary\"\n                      onChange={() => {\n                        this.setState({\n                          ...this.state,\n                          registrationInfo: {\n                            ...this.state.registrationInfo,\n                            willJoin: !this.state.registrationInfo.willJoin\n                          }\n                        })\n                      }}\n                      value={this.state.willJoin}\n                    />\n                  }\n                  label=\"Xác nhận tham dự\" />\n              </FormGroup>\n              {this.state.registrationInfo.willJoin && (\n                <div>\n                  <div style={{ width: '80%' }}>\n                    <TextField\n                      id=\"standard-multiline-flexible\"\n                      label=\"CMND/Căn cước\"\n                      style={{ marginLeft: 20, marginRight: 20 }}\n                      value={this.state.cmnd}\n                      onChange={this.handleChange('cmnd')}\n                      fullWidth\n                      margin=\"normal\"\n                    />\n                  </div>\n                  <div style={{ marginLeft: 20, marginTop: 30, width: '100%' }}>\n                    <FormControl component=\"fieldset\" style={{ marginRight: 80 }}>\n                      <FormLabel component=\"legend\">Nơi lưu trú</FormLabel>\n                      <RadioGroup\n                        aria-label=\"Nơi lưu trú:\"\n                        name=\"transLocation\"\n                        value={this.state.registrationInfo ? this.state.registrationInfo.location : \"\"}\n                        onChange={(value) => {\n                          this.setState({\n                            ...this.state,\n                            registrationInfo: {\n                              ...this.state.registrationInfo,\n                              location: value.target.value\n                            }\n                          })\n                        }}>\n                        {this.state.locations && this.state.locations.map(type => {\n                          return (\n                            <FormControlLabel value={type} control={<Radio color=\"primary\" />} label={type} />\n                          )\n                        })}\n                      </RadioGroup>\n                    </FormControl>\n                    <FormControl component=\"fieldset\" style={{ marginRight: 80 }}>\n                      <FormLabel component=\"legend\">Di chuyển chiều đi</FormLabel>\n                      <RadioGroup\n                        aria-label=\"Di chuyển chiều đi\"\n                        name=\"transTypeDeparture\"\n                        value={this.state.registrationInfo ? this.state.registrationInfo.transportationDeparture : \"\"}\n                        onChange={(value) => {\n                          this.setState({\n                            ...this.state,\n                            registrationInfo: {\n                              ...this.state.registrationInfo,\n                              transportationDeparture: value.target.value\n                            }\n                          })\n                        }}>\n                        {this.state.transTypesDeparture && this.state.transTypesDeparture.map(type => {\n                          return (\n                            <FormControlLabel value={type} control={<Radio color=\"primary\" />} label={type} />\n                          )\n                        })}\n                      </RadioGroup>\n                    </FormControl>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Di chuyển chiều về</FormLabel>\n                      <RadioGroup\n                        aria-label=\"Chọn phương thức di chuyển chiều về\"\n                        name=\"transTypeArrive\"\n                        value={this.state.registrationInfo ? this.state.registrationInfo.transportationArrive : \"\"}\n                        onChange={(value) => {\n                          this.setState({\n                            ...this.state,\n                            registrationInfo: {\n                              ...this.state.registrationInfo,\n                              transportationArrive: value.target.value\n                            }\n                          })\n                        }}>\n                        {this.state.transTypesArrive && this.state.transTypesArrive.map(type => {\n                          return (\n                            <FormControlLabel value={type} control={<Radio color=\"primary\" />} label={type} />\n                          )\n                        })}\n                      </RadioGroup>\n                    </FormControl>\n                  </div>\n                  <div style={{ marginLeft: 20, marginTop: 30, width: '100%' }}>\n                    <FormControl component=\"fieldset\" style={{ marginRight: 130 }}>\n                      <FormLabel component=\"legend\">Xác nhận lưu trú</FormLabel>\n                      <FormGroup>\n                        {this.state.staySchedules.map((stay, index) => {\n                          return (\n                            <FormControlLabel\n                              control={\n                                <Checkbox checked={stay.checked} onChange={() => {\n                                  let staySchedules = this.state.staySchedules;\n                                  staySchedules[index].checked = !staySchedules[index].checked;\n                                  this.setState({\n                                    staySchedules: staySchedules\n                                  })\n                                }} value={stay.name} color=\"primary\" />\n                              }\n                              label={stay.name}\n                            />\n                          )\n                        })}\n                      </FormGroup>\n                    </FormControl>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Đăng ký bữa ăn</FormLabel>\n                      <FormGroup>\n                        {this.state.eatSchedules.map((eat, index) => {\n                          return (\n                            <FormControlLabel\n                              control={\n                                <Checkbox checked={eat.checked} onChange={() => {\n                                  let eatSchedules = this.state.eatSchedules;\n                                  eatSchedules[index].checked = !eatSchedules[index].checked;\n                                  this.setState({\n                                    eatSchedules: eatSchedules\n                                  })\n                                }} value={eat.checked} color=\"primary\" />\n                              }\n                              label={eat.name}\n                            />\n                          )\n                        })}\n                      </FormGroup>\n                    </FormControl>\n                  </div>\n                  <div style={{ marginLeft: 20, marginTop: 30, width: '100%' }}>\n                    <Select\n                      value={this.state.roommate}\n                      onChange={(selectedOption) => {\n                        this.setState({\n                          roommate: selectedOption\n                        })\n                      }}\n                      options={this.state.eventUsers}\n                      isSearchable={true}\n                      styles={colourStyles}\n                      placeholder=\"Chọn bạn cùng phòng\" />\n                  </div>\n                </div>\n              )}\n              {!this.state.registrationInfo.willJoin && (\n                <div style={{ width: '80%' }}>\n                  <TextField\n                    id=\"standard-multiline-flexible\"\n                    label=\"Vui lòng nhập lý do từ chối tham dự\"\n                    style={{ marginLeft: 20, marginRight: 20 }}\n                    multiline\n                    rowsMax=\"4\"\n                    value={this.state.reason}\n                    onChange={this.handleChange('reason')}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                </div>\n              )}\n              <div style={{ marginTop: 30, marginBottom: 50 }}>\n                <Button variant=\"contained\" color='primary' size='large' onClick={this.registry}>\n                  ĐĂNG KÝ\n                </Button>\n              </div>\n            </div>\n            <div style={{ flex: 3, backgroundColor: '#f7f7f7' }}>\n              <VerticalTimeline>\n                {this.state.eventTimelineData.map((event, index) => {\n                  return (\n                    <VerticalTimelineElement\n                      className=\"vertical-timeline-element--work\"\n                      date={`${event.date}\\n${event.time}`}\n                      iconStyle={{ background: index % 2 === 0 ? '#1f419b' : 'rgb(33, 150, 243)', color: '#fff' }}>\n                      <h3 className=\"vertical-timeline-element-title\">{event.title}</h3>\n                      <p>\n                        {event.description}\n                      </p>\n                    </VerticalTimelineElement>\n                  )\n                })}\n              </VerticalTimeline>\n            </div>\n            <Snackbar\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={this.state.showError}\n              autoHideDuration={5000}\n              onClose={() => {\n                this.setState({\n                  showError: false\n                })\n              }}\n              ContentProps={{\n                'aria-describedby': 'message-id',\n              }}\n              message={<span id=\"message-id\">{this.state.errorMessage}</span>}\n            />\n          </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}